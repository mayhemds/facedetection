{"version":3,"sources":["components/Navigation/Navigation.js","components/FaceRecognition/FaceRecognition.js","components/Signin/Signin.js","components/Register/Register.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","FaceRecognition","imageUrl","box","id","alt","src","width","height","right","rightCol","top","topRow","bottom","bottomRow","left","leftCol","Signin","htmlfor","type","name","value","Register","Logo","options","max","ImageLinkForm","onInputChange","onButtonSubmit","onChange","Rank","app","Clarifai","App","apiKey","particlesOptions","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","console","log","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","route","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3eab340.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n    \n\n        if(isSignedIn){\n            return (\n                <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                    <p onClick={() => onRouteChange('signout')} className=\" f3 link dim white underline pa3 pointer\">Sign out</p>\n                </nav>\n            );\n            \n        } else {\n            return (\n                <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <p onClick={() => onRouteChange('home')} className=\" f3 link dim white underline pa3 pointer\">Sign In</p>\n                <p onClick={() => onRouteChange('Register')} className=\" f3 link dim white underline pa3 pointer\">Register</p>\n            </nav>\n            );\n        }\n}\n\n\nexport default Navigation;","import React from 'react';\nimport './FaceRecognition.css';\n\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n    return (\n        <div className=\"center ma\">\n            <div className='absolute mt 2'>\n                <img id='inputImage' alt=\"\" src={imageUrl}  width='500px' height='auto'\n                />\n                <div className='bounding-box' style={{ right: box.rightCol, top: box.topRow, bottom: box.bottomRow, left: box.leftCol }}> </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default FaceRecognition;","import React from 'react';\n\n\nconst Signin = ({ onRouteChange }) => {\n    return (\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4 black-80\">\n            <div className=\"measure\">\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n                <div className=\"mt3\">\n                    <label className=\"db fw6 lh-copy f6\" htmlfor=\"email-address\">Email</label>\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\n                </div>\n                <div className=\"mv3\">\n                    <label className=\"db fw6 lh-copy f6\" htmlfor=\"password\">Password</label>\n                    <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\n                </div>\n                </fieldset>\n                <div className=\"\">\n                <input onClick={() => onRouteChange('home')}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" \n                value=\"Sign in\" \n\n                />\n                </div>\n                <div className=\"lh-copy mt3\">\n                <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\n                </div>\n            </div>\n            </main>\n            </article>\n    );\n}\n\n\nexport default Signin;","import React from 'react';\n\n\nconst Register = ({ onRouteChange }) => {\n    return (\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4 black-80\">\n            <div className=\"measure\">\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n                <div className=\"mt3\">\n                    <label className=\"db fw6 lh-copy f6\" htmlfor=\"name\">Name</label>\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\n                </div>\n                <div className=\"mt3\">\n                    <label className=\"db fw6 lh-copy f6\" htmlfor=\"email-address\">Email</label>\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\n                </div>\n                <div className=\"mv3\">\n                    <label className=\"db fw6 lh-copy f6\" htmlfor=\"password\">Password</label>\n                    <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\n                </div>\n                </fieldset>\n                <div className=\"\">\n                <input onClick={() => onRouteChange('home')}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" \n                value=\"Register\" \n\n                />\n                </div>\n            </div>\n            </main>\n            </article>\n    );\n}\n\n\nexport default Register;","import React from 'react';\nimport Tilt from 'react-tilt';\nimport './Logo.css';\n\nconst Logo = () => {\n    return (\n        <div>\n           <Tilt className=\"Tilt white bg-light-blue\" options={{ max : 25 }} style={{ height: 150, width: 150 }} >\n                <div className=\"Tilt-inner f3\">Face Recognition Software</div>\n            </Tilt>\n        </div>\n        \n    );\n}\n\n\nexport default Logo;","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n    return (\n        <div>\n            <p className='f3 white'>\n                {'This software will detect faces in your pictures. Give it a Go!'}\n            </p>\n            <div className='center'>\n                <div className='form center pa4 br3 shadow-5 mb3'>\n                    <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange} />\n                    <button \n                    className='w-30 f4 link ph3 pv2 did white bg-light-blue'\n                    onClick={onButtonSubmit}\n                    >Detect</button>\n                </div>\n            </div>\n        </div>\n        \n    );\n}\n\n\nexport default ImageLinkForm;","import React from 'react';\n\nconst Rank = () => {\n    return (\n        <div>\n            <p className='white f4'>This is your Rank #5</p>\n        </div>\n        \n    );\n}\n\n\nexport default Rank;","import React, {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Clarifai from 'clarifai';\n\nimport 'tachyons';\nimport './App.css';\n\n\nconst app = new Clarifai.App({\n  apiKey: 'a2ba9c8d229f4c3b9059e08bb222f739'\n });\n\n\n // Particles Options \nconst particlesOptions = {\n  \"particles\": {\n      \"number\": {\n          \"value\": 50\n      },\n      \"size\": {\n          \"value\": 3\n      }\n  },\n  \"interactivity\": {\n      \"events\": {\n          \"onhover\": {\n              \"enable\": true,\n              \"mode\": \"repulse\"\n          }\n      }\n  }\n}\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false\n    }\n  }\n\ncalculateFaceLocation = (data) => {\nconst clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\nconst image = document.getElementById('inputImage');\nconst width = Number(image.width);\nconst height = Number(image.height);\nconsole.log(width, height);\n  return {\n    leftCol: clarifaiFace.left_col * width,\n    topRow: clarifaiFace.top_row * height,\n    rightCol: width - (clarifaiFace.right_col * width),\n    bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n}\n// Set the State for the Bounding Box\ndisplayFaceBox = (box) => {\n  console.log(box);\n  this.setState({box: box});\n}\n\nonInputChange = (event) => {\n  this.setState({input: event.target.value});\n}\n// on ButtonSubmit calls the Clarifai Api Face Detect Model\nonButtonSubmit = () => {\n  this.setState({imageUrl: this.state.input});\n  app.models\n  .predict(\n    Clarifai.FACE_DETECT_MODEL, \n    this.state.input)\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    .catch(err => console.log(err));\n}\n\n\nonRouteChange = (route) => {\n  if(route === 'signout') {\n    this.setState({isSignedIn: false})\n  }else if (route === 'home') {\n    this.setState({isSignedIn: true})\n  }\n  this.setState({route: route});\n}\n\n\n render() {\n  const  { isSignedIn, imageUrl, box, route } = this.state;\n  return (\n      <div className=\"App\">\n       <Particles className='particles' \n      params={{ particlesOptions }} />\n      \n    <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n    { route === 'home' \n      ? <div>\n      <Logo />\n    <Rank /> \n    <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />   \n    <FaceRecognition box={box} imageUrl={imageUrl}/>\n    </div>\n      :(\n        route === 'signin' \n        ? <Signin  onRouteChange={this.onRouteChange}/>\n        : <Register  onRouteChange={this.onRouteChange}/>\n      )\n      };\n      </div>\n  )\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}